{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PELICAN PANEL",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-09-26T00:00:00+00:00",
    "name": "Nanos World",
    "author": "admin@example.com",
    "description": "Nanos World is a next-generation open-world multiplayer sandbox game built on Unreal Engine 5. This server supports both stable and bleeding-edge versions with extensive modding capabilities through packages and assets.",
    "features": ["pid_limit"],
    "docker_images": {
        "Ubuntu 22.04": "ghcr.io/parkervcp/steamcmd:debian",
        "Ubuntu 20.04": "ghcr.io/parkervcp/steamcmd:ubuntu"
    },
    "file_denylist": [],
    "startup": "./NanosWorldServer.sh {{AUTO_DOWNLOAD}}",
    "config": {
        "files": "{\"Config.toml\": {\"parser\": \"file\", \"find\": {\"name =\": \"name = \\\"{{server.build.env.SERVER_NAME}}\\\"\", \"port =\": \"port = {{server.build.default.port}}\", \"query_port =\": \"query_port = {{server.build.env.QUERY_PORT}}\", \"max_players =\": \"max_players = {{server.build.env.MAX_PLAYERS}}\"}}}",
        "startup": "{\"done\": \"[LOG] Server Started\"}",
        "logs": "{\"custom\": false, \"location\": \"logs/latest.log\"}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!/bin/bash\n# Nanos World Server Installation Script\n# Server Files: /mnt/server\n\n## File: Pterodactyl Nanos World Egg - egg-nanos-world.json\n## Author: Pelican Panel Community\n## GitHub: https://github.com/pelican-eggs/games-steamcmd\n\n# Update package lists and install dependencies\napt -y update\n\n# Install appropriate dependencies based on architecture\nif [ \"$(dpkg --print-architecture)\" == \"amd64\" ]; then\n    # For 64-bit systems, install lib32gcc-s1 (replacement for lib32gcc1)\n    apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates wget\nelse\n    # For other architectures, install standard gcc libs\n    apt -y --no-install-recommends install curl gcc ca-certificates wget\nfi\n\n# Install SteamCMD\ncd /tmp\nmkdir -p /mnt/server/steamcmd\ncd /mnt/server/steamcmd\n\nif [ \"$(uname -m)\" == \"x86_64\" ]; then\n    echo \"Downloading SteamCMD for Linux x64...\"\n    curl -sSL -o steamcmd_linux.tar.gz https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz\nelse\n    echo \"Architecture not supported for SteamCMD\"\n    exit 1\nfi\n\ntar -xzvf steamcmd_linux.tar.gz\nrm steamcmd_linux.tar.gz\n\n# Create server directory\nmkdir -p /mnt/server\ncd /mnt/server\n\n## Install/Update Nanos World Server via SteamCMD\necho \"Downloading Nanos World Server files via SteamCMD...\"\n\n# Determine branch based on version selection (default to stable)\nBRANCH=\"\"\necho \"Installing stable version\"\n\n# Download server files using SteamCMD\n/mnt/server/steamcmd/steamcmd.sh +force_install_dir /mnt/server +login anonymous +app_update 1936830 validate +quit\n\n# Verify installation\nif [ ! -f \"/mnt/server/NanosWorldServer.sh\" ]; then\n    echo \"ERROR: Server installation failed - NanosWorldServer.sh not found\"\n    exit 1\nfi\n\n# Make server executable\nchmod +x /mnt/server/NanosWorldServer.sh\nif [ -f \"/mnt/server/Binaries/Linux/NanosWorldServer-Linux-Shipping\" ]; then\n    chmod +x /mnt/server/Binaries/Linux/NanosWorldServer-Linux-Shipping\nfi\n\n# Create necessary directories\nmkdir -p /mnt/server/logs\nmkdir -p /mnt/server/Packages\nmkdir -p /mnt/server/Assets\n\n# Create Config.toml file\ncat > /mnt/server/Config.toml << 'EOF'\n# discover configurations\n[discover]\n    # server name\n    name =              \"Nanos World Server\"\n    # server description (max 127 characters)\n    description =       \"A Nanos World server hosted with Pelican Panel\"\n    # server IP. we recommend leaving it 0.0.0.0 for default\n    ip =                \"0.0.0.0\"\n    # server port (TCP and UDP)\n    port =              27001\n    # query port (UDP)\n    query_port =        7778\n    # announce server in the master server list\n    announce =          true\n    # true if should run as dedicated server or false to run as P2P - dedicated server requires port forwarding and provides the fastest connection - P2P will provide a fake IP to be used to connect but connection can be slower\n    dedicated_server =  false\n\n# general configurations\n[general]\n    # max players\n    max_players =       32\n    # leave it blank for no password\n    password =          \"\"\n    # nanos world server authentication token\n    token =             \"\"\n    # banned nanos account IDs\n    banned_ids = [\n                        \n    ]\n\n# game configurations\n[game]\n    # default startup map\n    map =               \"default-testing-map\"\n    # game-mode package to load (set the main game-mode package to load - you can load only one 'game-mode' package type at once)\n    game_mode =         \"sandbox\"\n    # packages list (set the packages you want to load)\n    packages = [\n                        \n    ]\n    # asset packs list (additionally loads the asset packs you define here)\n    assets = [\n                        \n    ]\n    # loading-screen package to load (the loading screen will be displayed when players join your server)\n    loading_screen =    \"\"\n\n# custom settings values\n# those values can be accessed through Server.GetCustomSettings() method from any package\n[custom_settings]\n    # my_setting_example_01 = \"value\"\n    # my_setting_example_02 = 123\n\n# debug configurations\n[debug]\n    # log Level - (1) normal, (2) debug or (3) verbose\n    log_level =         1\n    # if to use async or sync logs (async provides better performance, disabling async logs can help debugging crashes)\n    async_log =         true\n    # enables performance profiling logs for debugging\n    profiling =         false\n\n# optimization configurations\n[optimization]\n    # server max tick rate in Hz (ticks per second). Higher = more responsive but uses mor CPU. 30 Hz = 33ms per tick (default and recommended). Use with caution\n    max_tick_rate =     30\n    # sets the compression level to use in some networking operations (0 - 9) - (0) disables it, (1) is the fastest and (9) is the slowest but has the highest compression ratio\n    compression =       1\nEOF\n\n# Clean up SteamCMD from server directory to save space\nrm -rf /mnt/server/steamcmd\n\necho \"Nanos World Server installation completed successfully!\"\necho \"Installation directory: /mnt/server\"\necho \"Executable: ./NanosWorldServer.sh\"\necho \"Config.toml created with default settings\"",
            "container": "ghcr.io/parkervcp/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Auto Download",
            "description": "Enable automatic download of packages and assets for players when they connect to the server.",
            "env_variable": "AUTO_DOWNLOAD",
            "default_value": "--auto_download",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|in:--auto_download,",
            "field_type": "text"
        }
    ]
}
